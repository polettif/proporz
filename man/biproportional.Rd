% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/biproportional.R
\name{biproportional}
\alias{biproportional}
\title{Biproportional apportionment}
\usage{
biproportional(
  votes_matrix,
  seats_per_district,
  quorum_districts = 0,
  quorum_total = 0
)
}
\arguments{
\item{votes_matrix}{Vote count matrix with votes by party in rows
and votes by district in columns and}

\item{seats_per_district}{vector defining the number of seats per district.
Must be the same length as ncol(votes_matrix).}

\item{quorum_districts}{Vote threshold a party must reach in _at least_ one
district. Used as quota of total votes within a
district if less than 1 otherwise as number of votes.}

\item{quorum_total}{Vote threshold a party must reach for all votes cast.
Used as quota of total votes if less than 1 otherwise
as number of votes.}
}
\description{
Parties failing to reach at least one quorum cannot get seats.
}
\examples{
votes_df = unique(zug2018[c("list_id", "entity_id", "list_votes")])
votes_matrix = pivot_to_matrix(votes_df)
votes_matrix
#>        entity_id
#> list_id  1701 1702 1703 1704 1705 1706 1707 1708 1709 1710  1711
#>       1  2993    0    0    0    0    0    0    0    0    0     0
#>       2  8108 4687 1584  531  279  477 2363 3860 1481   91 22023
#>       3 19389 9334 4807 1946  396 2844 3523 4702 3310  812 21343
#>       4 14814 6691 4005  826  379 1654 2842 2624 2713  461 33789
#>       5  4486 2270  621  198    0  361  728  465  925    0 10131
#>       6 15695 4705 1750   84    0   51  627 1106 1563  302 21794
#>       7 21298 8178 2875 1336  399 1450 3715 2610 4063  344 26798

distr_df = unique(zug2018[c("entity_id", "election_mandates")])
district_seats = setNames(distr_df$election_mandates, distr_df$entity_id)
district_seats
#> 1701 1702 1703 1704 1705 1706 1707 1708 1709 1710 1711
#>   15   10    6    3    2    4    7    6    6    2   19

biproportional(votes_matrix, district_seats, 0.05, 0.03)
#>        entity_id
#> list_id 1701 1702 1703 1704 1705 1706 1707 1708 1709 1710 1711
#>       1    1    0    0    0    0    0    0    0    0    0    0
#>       2    2    1    1    0    0    0    1    2    1    0    3
#>       3    3    3    2    1    0    2    2    2    1    1    3
#>       4    2    2    1    1    1    1    2    1    1    1    4
#>       5    1    1    0    0    0    0    0    0    0    0    2
#>       6    3    1    1    0    0    0    0    0    1    0    3
#>       7    3    2    1    1    1    1    2    1    2    0    4

}

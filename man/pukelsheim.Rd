% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/biproportional.R
\name{pukelsheim}
\alias{pukelsheim}
\title{Biproportional apportionment with data frames}
\usage{
pukelsheim(
  votes_df,
  district_seats_df,
  new_seats_col = "seats",
  quorum_districts = 0,
  quorum_total = 0,
  use_list_votes = TRUE
)
}
\arguments{
\item{votes_df}{data.frame (long format) with 3 columns (actual colnames can differ):
\itemize{
  \item party id/name
  \item district id/name
  \item votes
  }}

\item{district_seats_df}{data.frame with 2 colums (actual colnames can differ):
\itemize{
  \item district id/name
  \item number of seats for a district
}}

\item{new_seats_col}{name of the new column}

\item{quorum_districts}{Vote threshold a party must reach in \emph{at least} one
district. Used as quota of total votes within a
district if less than 1 otherwise as number of votes.}

\item{quorum_total}{Vote threshold a party must reach for all votes cast.
Used as quota of total votes if less than 1 otherwise
as number of votes.}

\item{use_list_votes}{By default (TRUE) it's assumed that each voter in a district has as
many votes as there are seats in a district. Set to FALSE if
\code{votes_df} shows the number of voters.}
}
\description{
Method to proportionally allocate seatsamong parties/lists and
districts/regions/entities ("Doppelter Pukelsheim").
}
\details{
Each party nominates a candidate list for every district. The voters vote for the
parties of their district. The seat allocation is calculated in two steps:

\enumerate{
  \item In the so called \emph{upper apportionment} the number of seats for each party
  (over all districts) is determined.
  \item In the so called \emph{lower apportionment} the seats are distributed to the
  regional party list respecting the results from the upper apportionment.
}

Parties failing to reach at least one aquorum have their votes set to zero.
}
\examples{
votes_df = unique(zug2018[c("list_id", "entity_id", "list_votes")])
district_seats_df = unique(zug2018[c("entity_id", "election_mandates")])

seats_df = pukelsheim(votes_df,
                      district_seats_df,
                      quorum_districts = 0.05,
                      quorum_total = 0.03)

head(seats_df)
#>   list_id entity_id list_votes seats
#> 1       2      1701       8108     2
#> 2       1      1701       2993     0
#> 3       3      1701      19389     3
#> 4       4      1701      14814     2
#> 5       5      1701       4486     1
#> 6       6      1701      15695     3

}
\seealso{
\link{biproportional}
}
